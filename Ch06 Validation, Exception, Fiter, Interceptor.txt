**** validation *****
implementation("org.springframework.boot:spring-boot-starter-validation")

@Pattern(regexp = "^\\d{2,3}-\\d{3,4}-\\d{4}$", message = "input error message")
	정규식 사용

@Valid
    public Object user(@Valid @RequestBody User user, BindingResult bindingResult){}
    @Max, @Email등의  어노테이션이 붙은 클래스(멤버만 해당) 검증을 실행할때 사용한다
	BindingResult의 경우 검증이 실패할 경우 결과가 저장된다.

	@Valid
    private List<Car> cars;
	검증하는 멤버가 객체일 경우 그 객채-> 멤버위에 한번 더 써준다.

@NotNull : null 불가
@NotEmpty : null, "" 불가
@NotBlank : null,""," " 불가
@Size(min = 6, max = 6)
@Past : 과거날짜
@PastOrPresent : 오늘이나 과거 날짜
@Future : 미래날짜
@FutureOrPresent : 오늘이거나 미래날짜
@Max, @Min(value = 0)

@AssertTrue/False : 별도 Logic 적용  ---> custom
	검증될 클래스에 isXXX로 시작하는 메서드로 Logic을 작성한다

	@AssertTrue // 결과가 true인 경우 검증 통과
	public boolean isAssert(){}


@Validated : @Valid와 비슷하지만 그룹으로 지정한 validation만 검증이 가능하다
https://velog.io/@damiano1027/Spring-Valid-Validated%EB%A5%BC-%EC%9D%B4%EC%9A%A9%ED%95%9C-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%9C%A0%ED%9A%A8%EC%84%B1-%EA%B2%80%EC%A6%9D

